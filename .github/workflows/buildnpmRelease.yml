# This workflow will do a clean install of node dependencies, build the source code, 
# run unit tests, and perform a SonarCloud scan ONLY on a `release`. 

# For more information see: 
# https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Common FOLIO configurable env:
#   - YARN_TEST_OPTIONS (options to pass to 'yarn test')
#   - SQ_ROOT_DIR (where to scan relative to top-level directory)
#   - FOLIO_NAME
#   - PUBLISH_MOD_DESCRIPTOR (boolean 'true' or 'false')
#   - COMPILE_TRANSLATION_FILES (boolean 'true' or 'false')

name: buildNPM release
on: [push, pull_request]
    # release:
    #   tags:
    #     - 'v*.*.*'
jobs:
  Build:
    env:
      YARN_TEST_OPTIONS: '--ci --coverage --colors'
      FOLIO_NAME: folio_users
      FOLIO_NPM_REGISTRY: 'https://repository.folio.org/repository/npm-folio/'
      NODEJS_VERSION: '12'
      JEST_JUNIT_OUTPUT_DIR: 'artifacts/jest-junit'
      JEST_COVERAGE_REPORT_DIR: 'artifacts/coverage-jest/lcov-report/'
      BIGTEST_JUNIT_OUTPUT_DIR: 'artifacts/runTest'
      BIGTEST_COVERAGE_REPORT_DIR: 'artifacts/coverage/lcov-report/'
      PUBLISH_MOD_DESCRIPTOR: true
      OKAPI_PULL: '{ "urls" : [ "https://folio-registry.dev.folio.org" ] }'
      SQ_ROOT_DIR: './src'
      COMPILE_TRANSLATION_FILES: true
      SQ_LCOV_REPORT: 'artifacts/coverage-jest/lcov.info'
      SQ_EXCLUSIONS: '**/platform/alias-service.js,**/docs/**,**/node_modules/**,**/examples/**,**/artifacts/**,**/ci/**,Jenkinsfile,**/LICENSE,**/*.css,**/*.md,**/*.json,**/tests/**,**/stories/*.js,**/test/**,**/.stories.js,**/resources/bigtest/interactors/**,**/resources/bigtest/network/**,**/*-test.js,**/*.test.js,**/*-spec.js,**/karma.conf.js,**/jest.config.js'

    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          check-latest: true
          always-auth: true

      - name: Set yarn config
        run: yarn config set @folio:registry $FOLIO_NPM_REGISTRY

      - name: Set FOLIO NPM  release version from package.json
        run: | 
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')

      - name: Run yarn install
        run: yarn install --ignore-scripts

      - name: Run yarn list
        run: yarn list --pattern @folio

      - name: Run yarn lint
        run: yarn lint
        continue-on-error: true

      # - name: Run yarn test
      #   run: xvfb-run --server-args="-screen 0 1024x768x24" yarn test $YARN_TEST_OPTIONS

      - name: Run yarn formatjs-compile
        if : ${{ env.COMPILE_TRANSLATION_FILES }}
        run: yarn formatjs-compile

      - name: Generate Module descriptor
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR }}
        run: yarn build-mod-descriptor

      - name: debug mod descriptor
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR }}
        run: cat module-descriptor.json

      - name: Read module descriptor 
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR && github.ref == 'refs/heads/master' || github.ref  == 'refs/heads/main' || github.ref == 'refs/heads/FOLIO-3067-Ankita' }}
        id: moduleDescriptor
        uses: juliangruber/read-file-action@v1
        with:
          path: ./module-descriptor.json

      - name: Docker registry login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login https://docker.io/v2/ -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Start a local instance of Okapi
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR }}
        run: |
          docker pull folioorg/okapi:latest
          docker run --name okapiLatest -t -detach folioorg/okapi:latest dev
          sleep 3
          echo "OKAPI_IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' okapiLatest)" >> $GITHUB_ENV
          sleep 10
      
      - name: Pull all Module descriptors to local Okapi instance
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR }}
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ env.OKAPI_IP }}:9130/_/proxy/pull/modules
          method: 'POST'
          contentType: 'application/json; charset=utf-8'
          customHeaders: '{ "Accept": "application/json; charset=utf-8" }'
          data: ${{ env.OKAPI_PULL }}
          timeout: 60000

      - name: Perform local Okapi dependency check
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR }}
        uses: fjogeleit/http-request-action@master
        with:
          # use in production
          #url: 'http://172.17.0.2:9130/_/proxy/modules?preRelease=false&npmSnapshot=false'
          # line below is for testing only --malc
          url: 'http://172.17.0.2:9130/_/proxy/modules'
          method: 'POST'
          contentType: 'application/json; charset=utf-8'
          customHeaders: '{ "Accept": "application/json; charset=utf-8" }'
          data: ${{ steps.moduleDescriptor.outputs.content }}

      - name: Publish Jest unit test results
        uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1
        if: always()
        with: 
          github_token: ${{ github.token }}
          files: "${{ env.JEST_JUNIT_OUTPUT_DIR }}/*.xml"
          check_name: Jest Unit Test Results
          comment_on_pr: true
          comment_title: Jest Unit Test Statistics

      - name: Publish Jest coverage report
        uses: actions/upload-artifact@v2
        if: always() 
        with: 
          name: jest-coverage-report 
          path: ${{ env.JEST_COVERAGE_REPORT_DIR }}
          retention-days: 30

      - name: Publish BigTest unit test results
        uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1
        if: always()
        with: 
          github_token: ${{ github.token }}
          files: "${{ env.BIGTEST_JUNIT_OUTPUT_DIR }}/*.xml"
          check_name: BigTest Unit Test Results
          comment_on_pr: true
          comment_title: BigTest Unit Test Statistics

      - name: Publish BigTest coverage report
        uses: actions/upload-artifact@v2
        if: always() 
        with: 
          name: bigtest-coverage-report 
          path: ${{ env.BIGTEST_COVERAGE_REPORT_DIR }}
          retention-days: 30
 
      - name: Publish yarn.lock 
        uses: actions/upload-artifact@v2
        if: failure()
        with: 
          name: yarn.lock
          path: yarn.lock
          retention-days: 5

      - name: Fetch branches for SonarCloud
        run: git fetch --no-tags ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} +refs/heads/master:refs/remotes/origin/master
        
      - name: Run SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=folio-org 
            -Dsonar.projectKey=org.folio:${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.sources=${{ env.SQ_ROOT_DIR }}
            -Dsonar.language=js 
            -Dsonar.javascript.lcov.reportPaths=${{ env.SQ_LCOV_REPORT }}
            -Dsonar.exclusions=${{ env.SQ_EXCLUSIONS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up NPM environment for publishing
        if: ${{ github.ref == 'refs/heads/master' || github.ref  == 'refs/heads/main' || github.ref == 'refs/heads/FOLIO-3067-Ankita' }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          check-latest: true
          always-auth: true

      - name: Set _auth in .npmrc
        if: ${{ github.ref == 'refs/heads/master' || github.ref  == 'refs/heads/main' || github.ref == 'refs/heads/FOLIO-3067-Ankita' }}
        run: npm config set @folio:registry https://repository.folio.org/repository/npm-folio-test/ &&  npm config set _auth ${{ env.NODE_AUTH_TOKEN }}
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish NPM to FOLIO NPM registry
        if: ${{ github.ref == 'refs/heads/master' || github.ref  == 'refs/heads/main' || github.ref == 'refs/heads/FOLIO-3067-Ankita' }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish module descriptor to FOLIO registry
        if: ${{ env.PUBLISH_MOD_DESCRIPTOR && github.ref == 'refs/heads/master' || github.ref  == 'refs/heads/main' || github.ref == 'refs/heads/FOLIO-3067-Ankita' }} 
        id: modDescriptorPost
        uses: fjogeleit/http-request-action@master
        with:
          url: 'http://ec2-3-88-110-24.compute-1.amazonaws.com/_/proxy/modules'
          method: 'POST'
          contentType: 'application/json; charset=utf-8'
          customHeaders: '{ "Accept": "application/json; charset=utf-8" }'
          data: ${{ steps.moduleDescriptor.outputs.content }}
          username: ${{ secrets.FOLIO_REGISTRY_USERNAME }}
          password: ${{ secrets.FOLIO_REGISTRY_PASSWORD }}
      
